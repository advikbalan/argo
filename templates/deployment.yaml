apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0" # Ensures ArgoCD sync order is maintained
  name: {{ .Values.deployment.name }} # Name of the deployment, sourced from values.yaml
  namespace: {{ .Values.namespace }} # Namespace where the deployment will be created
spec:
  replicas: {{ .Values.deployment.replicas }} # Number of replicas for the deployment
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }} # Limit for deployment revision history
  selector:
    matchLabels:
      component: {{ .Values.deployment.name }} # Selector to match the deployment pods
  template:
    metadata:
      labels:
        app: {{ .Values.namespace }} # Label for app, sourced from namespace value
        component: {{ .Values.deployment.name }} # Label for component, sourced from deployment name
      # Uncomment the following block if vault agent injection is enabled
      # {{- if .Values.vault.flags.vaultAgentInitEnabled }}
      # annotations:
      #   vault.hashicorp.com/agent-inject: 'true' # Enables Vault agent injection
      #   vault.hashicorp.com/agent-init-first: 'true' # Injects agent as the first container
      #   vault.hashicorp.com/preserve-secret-case: 'true' # Preserves secret case in Vault
      #   vault.hashicorp.com/tls-secret: 'vault-tls-secret' # TLS secret for Vault communication
      #   vault.hashicorp.com/ca-cert: "/vault/tls/ca-bundle.crt" # CA certificate path
      #   vault.hashicorp.com/log-level: '{{ .Values.vault.configs.logLevel | default "debug" }}' # Log level for Vault
      #   vault.hashicorp.com/service: '{{ .Values.vault.configs.vaultServer | default "https://VAULT_ADDR" }}' # Vault server address
      #   vault.hashicorp.com/namespace: '{{ .Values.vault.configs.vaultNamespace | default "NAMESPACE" }}' # Vault namespace
      #   vault.hashicorp.com/auth-type: 'kubernetes' # Authentication type for Vault
      #   vault.hashicorp.com/auth-path: 'auth/kubernetes/{{ .Values.vault.configs.kubernetesCluster | default "KUBERNETES_CLUSTER" }}' # Auth path
      #   vault.hashicorp.com/role: '{{ .Values.vault.configs.vaultFolder | default "APPNAME.APPID" }}-kubernetes-role' # Vault role
      #   vault.hashicorp.com/agent-inject-default-template: '{{ .Values.vault.configs.outputFormat | default "json" }}' # Default template for Vault secrets
      #   {{- range .Values.vault.secrets }}
      #   vault.hashicorp.com/agent-inject-secret-{{ .secretFileName }}: '{{ .secretPath }}' # Inject secret from Vault
      #   # Uncomment the following template to customize secret injection
      #   # vault.hashicorp.com/agent-inject-template-{{ .secretFileName }}: |
      #   #   {{`{{ with secret " `}} {{ .secretPath }} {{` " }}`}}
      #   #   {{`{{ .Data.data | toJSON }}`}}
      #   #   {{`{{ end }}`}}
      #   {{- end }}
      # {{- end }}
    spec:
      # Uncomment the following line if using a service account for Vault authentication
      # serviceAccountName: vault-auth
      containers:
      - name: {{ .Values.deployment.name }} # Container name, sourced from deployment name
        image: {{ .Values.deployment.image }} # Docker image for the container
        # Uncomment and define environment variables if required
        # env:
        # - name: ASPNETCORE_ENVIRONMENT
        #   value: {{ .Values.deployment.env.ASPNETCORE_ENVIRONMENT }}
        ports:
          # Define container ports based on values.yaml
          {{- range .Values.deployment.containerPorts }}
          - containerPort: {{ . }} # Container port
          {{- end }}
        resources:
          # Resource limits for the container
          limits:
            memory: {{ .Values.deployment.resources.limits.memory }} # Memory limit
            cpu: {{ .Values.deployment.resources.limits.cpu }} # CPU limit
          # Resource requests for the container
          requests:
            memory: {{ .Values.deployment.resources.requests.memory }} # Memory request
            cpu: {{ .Values.deployment.resources.requests.cpu }} # CPU request
      # Uncomment the following block to include image pull secrets
      # imagePullSecrets:
      # {{- range .Values.deployment.imagePullSecrets }}
      # - name: {{ . }} # Name of the image pull secret
      # {{- end }}
